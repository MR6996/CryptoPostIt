<resources>
    <string name="app_name" translatable="false">Crypto Post-It</string>

    <!-- Main Drawer title -->
    <string name="basic_category_title">Basic</string>
    <string name="cryptography_algorithm_category_title">Cryptography algorithm</string>
    <string name="bezout_item_title">BÃ©zout identity</string>
    <string name="discrete_log_item_title">Discrete logarithm</string>
    <string name="settings_view">Settings</string>
    <string name="about_view">About</string>


    <!-- Common application string resources -->
    <string name="error_dialog_title">Error</string>
    <string name="warning_dialog_title">Warning!</string>
    <string name="dialog_ok" translatable="false">OK</string>
    <string name="empty_edit_text">Some text field are void!</string>
    <string name="calculate_button">Calculate</string>
    <string name="result_label">Result: </string>
    <string name="step_label">Steps: </string>

    <!-- Bezout fragment string resources -->
    <string name="bezout_description">Given two integers \\(a\\neq 0\\) and \\(b\\neq 0\\), finds integers \\(x\\) and \\(y\\), such that $$ gcd(a, b) = a\\cdot x + b\\cdot y$$</string>
    <string name="bezout_a_edit_text">Insert integer a</string>
    <string name="bezout_b_edit_text">Insert integer b</string>
    <string name="bezout_result">$$x = %s, y = %s$$ $$ gcd(a,b)=%s$$</string>
    <string name="null_bezout_parameter">The integers must be not null.</string>
    <string name="bezout_initial_step" translatable="false">$$\\begin{cases} r_{%d} = %s \\\\ s_{%d} = %s \\\\ t_{%d} = %s \\end{cases}$$</string>
    <string name="bezout_step" translatable="false">$$\\begin{cases} r_{%d} = r_{%d} - %s \\cdot r_{%d} = %s \\\\ s_{%d} = s_{%d} - %s \\cdot s_{%d} = %s \\\\ t_{%d} = t_{%d} - %s \\cdot t_{%d} = %s  \\end{cases}$$</string>

    <!-- Discrete logarithm fragment string resources -->
    <string name="dl_introduction">Given \\(\\alpha, \\gamma \\in G\\), find \\(a\\) such that: $$\\alpha = \\gamma^{a}$$</string>
    <string name="dl_p_hint">Insert integer p</string>
    <string name="dl_alpha_hint">Insert alpha</string>
    <string name="dl_gamma_hint">Insert gamma</string>
    <string name="dl_not_prime_integer">The inserted integer p is not prime!</string>
    <string name="dl_result" translatable="false">$$a = %d$$</string>
    <string name="dl_step" translatable="false">$$ %d \\cdot \\gamma = %s$$</string>
    <string name="dl_max_attempts_reached">It\'s not possible to calculate discrete logarithm for this parameters. Max attempt number has been reached! Probably inserted data are not valid!</string>

    <!-- RSA fragment string resources -->
    <string name="rsa_description">Given public key \\((n,e)\\), finds private key \\(d\\) and deciphers the message \\(c\\).</string>
    <string name="rsa_n_edit_text">Insert integer n</string>
    <string name="rsa_e_edit_text">Insert integer e</string>
    <string name="rsa_c_edit_text">Insert ciphered message</string>
    <string name="rsa_n_prime_number">n is probable prime, check your data.</string>
    <string name="rsa_null_public_key">e not be null.</string>
    <string name="rsa_result">$$n = p \\cdot q = %s \\cdot %s$$ $$ \\lambda = mcm(%s, %s) = %s $$ $$d = %s$$ $$ m = %s$$</string>

    <!-- RSA fragment string resources -->
    <string name="el_gamal_alpha_hint">Insert alpha</string>
    <string name="el_gamal_beta_hint">Insert beta</string>
    <string name="el_gamal_c_hint">Insert ciphered message</string>
    <string name="el_gamal_gamma_hint">Insert gamma</string>
    <string name="el_gamal_p_hint">Insert integer p</string>
    <string name="el_gamal_introduction">Given public keys \\((\\alpha, \\gamma)\\) and \\((\\beta, \\gamma)\\), calculates \\(K = a\\cdot \\beta = b\\cdot \\alpha\\) such that \\(\\alpha = a\\cdot \\gamma\\) and \\(\\beta = b\\cdot \\gamma\\). Given c, it also calculates \\(m = c \\cdot K^{-1}\\)</string>
    <string name="el_gamal_result" translatable="false">$$a = %s$$  $$b =  %s$$ $$k = %s$$ $$m = %s$$</string>


</resources>
